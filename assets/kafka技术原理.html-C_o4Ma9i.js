import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as t,i as n,o as r}from"./app-Dv8LqZ_s.js";const o="/veins/assets/img-DWaM6ksP.png",s={};function i(h,a){return r(),t("div",null,a[0]||(a[0]=[n('<h1 id="kafka技术原理解析" tabindex="-1"><a class="header-anchor" href="#kafka技术原理解析"><span>kafka技术原理解析</span></a></h1><h2 id="kafka架构设计" tabindex="-1"><a class="header-anchor" href="#kafka架构设计"><span>kafka架构设计</span></a></h2><h3 id="持久化设计" tabindex="-1"><a class="header-anchor" href="#持久化设计"><span>持久化设计</span></a></h3><p>kafka基于文件系统进行存储，基于pagecache进行设计，磁盘顺序写有时候比内存随机写更快。相当于缓存可以扩大一倍，在JVM环境下甚至扩大更多。<br><img src="'+o+'" alt="img.png" loading="lazy"></p><h4 id="读写常数时间复杂度" tabindex="-1"><a class="header-anchor" href="#读写常数时间复杂度"><span>读写常数时间复杂度</span></a></h4><p>持久化队列，读写互相不阻塞</p><h3 id="高性能设计" tabindex="-1"><a class="header-anchor" href="#高性能设计"><span>高性能设计</span></a></h3><h4 id="零拷贝" tabindex="-1"><a class="header-anchor" href="#零拷贝"><span>零拷贝</span></a></h4><h4 id="端到端压缩" tabindex="-1"><a class="header-anchor" href="#端到端压缩"><span>端到端压缩</span></a></h4>',9)]))}const k=e(s,[["render",i],["__file","kafka技术原理.html.vue"]]),m=JSON.parse('{"path":"/backend/message/kafka%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86.html","title":"kafka技术原理解析","lang":"zh-CN","frontmatter":{"description":"kafka技术原理解析 kafka架构设计 持久化设计 kafka基于文件系统进行存储，基于pagecache进行设计，磁盘顺序写有时候比内存随机写更快。相当于缓存可以扩大一倍，在JVM环境下甚至扩大更多。 img.png 读写常数时间复杂度 持久化队列，读写互相不阻塞 高性能设计 零拷贝 端到端压缩","head":[["meta",{"property":"og:url","content":"https://njustlcx.github.io/veins/veins/backend/message/kafka%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"Veins"}],["meta",{"property":"og:title","content":"kafka技术原理解析"}],["meta",{"property":"og:description","content":"kafka技术原理解析 kafka架构设计 持久化设计 kafka基于文件系统进行存储，基于pagecache进行设计，磁盘顺序写有时候比内存随机写更快。相当于缓存可以扩大一倍，在JVM环境下甚至扩大更多。 img.png 读写常数时间复杂度 持久化队列，读写互相不阻塞 高性能设计 零拷贝 端到端压缩"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-04T11:31:49.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-04T11:31:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"kafka技术原理解析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-04T11:31:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小驴哥\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"git":{"createdTime":1748181397000,"updatedTime":1749036709000,"contributors":[{"name":"lvchaoxian","username":"lvchaoxian","email":"lvchaoxian@meituan.com","commits":2,"url":"https://github.com/lvchaoxian"}]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"backend/message/kafka技术原理.md","localizedDate":"2025年5月25日","excerpt":"\\n<h2>kafka架构设计</h2>\\n<h3>持久化设计</h3>\\n<p>kafka基于文件系统进行存储，基于pagecache进行设计，磁盘顺序写有时候比内存随机写更快。相当于缓存可以扩大一倍，在JVM环境下甚至扩大更多。<br>\\n</p>\\n<h4>读写常数时间复杂度</h4>\\n<p>持久化队列，读写互相不阻塞</p>\\n<h3>高性能设计</h3>\\n<h4>零拷贝</h4>\\n<h4>端到端压缩</h4>\\n","autoDesc":true}');export{k as comp,m as data};
